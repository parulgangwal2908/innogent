
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

class ListPerformance {
    public static long measureInsert(List<Integer>list,int n){
        long start=System.nanoTime();
        for(int i=0;i<n;i++){
            list.add(i);
        }
        long end =System.nanoTime();
        return end-start;
    }
    public static long measureDelete(List<Integer>list,int n){
        long start=System.nanoTime();
        for(int i=n-1;i>=0;i--){
            list.remove(i);
        }
        long end =System.nanoTime();
        return end-start;
    }
}

public class Main
{
	public static void main(String[] args) {
		int[] sizes={10000,50000,100000};
		for(int n: sizes){
		    
		    List<Integer> arrList=new ArrayList<>();
		    System.out.println(n);
		    long insertArrTime=ListPerformance.measureInsert(arrList,n);
		    System.out.println("for ArrayList insertion ="+insertArrTime/ 1e6);
		    
		    long deleteArrTime=ListPerformance.measureDelete(arrList,n);
		    System.out.println("for ArrayList deletion ="+deleteArrTime/ 1e6);
		    
		    List<Integer> linkedList=new LinkedList<>();
		    System.out.println(n);
		    long insertLinkedTime=ListPerformance.measureInsert(linkedList,n);
		    System.out.println("for LinkedList insertion ="+insertLinkedTime/ 1e6);
		    
		    long deleteLinkedTime=ListPerformance.measureDelete(linkedList,n);
		    System.out.println("for LinkedList deletion ="+deleteLinkedTime/ 1e6);
		    
		    
		}
		
	}
}
